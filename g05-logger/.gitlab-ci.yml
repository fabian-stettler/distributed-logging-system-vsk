#
# Copyright 2024 Roland Gisler, HSLU Informatik, Switzerland
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
default:
  image: maven:3.9.9-eclipse-temurin-21  # Use Maven with OpenJDK image for all stages
  services:
    - name: docker:dind
      command: ["--tls=false"]  # Use Docker-in-Docker service

variables:
  DOCKER_HOST: "tcp://docker:2375"  # Ensure Docker daemon is reachable
  DOCKER_TLS_CERTDIR: ""  # Disable Docker TLS
  DOCKER_DRIVER: overlay2  # Docker storage driver
  MAVEN_CLI_OPTS: "-s .mvn/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:latest

cache:
  paths:
    - .m2/repository
    - target

stages:
  - build
  - deploy

# Build Stage - Only compiles, packages, and installs dependencies
build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean install -DskipTests  -DskipITs $MAVEN_OPTS  # Skip integration tests during build
    - mvn $MAVEN_CLI_OPTS verify -Dfailsafe.failIfNoSpecifiedTests=false $MAVEN_OPTS
  artifacts:
    paths:
      - target/*.jar  # Adjust according to the artifact you're generating
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml

package-deploy:
    needs:
        - build
    stage: deploy
    script:
        - mvn $MAVEN_CLI_OPTS deploy $MAVEN_OPTS -DskiptTests -DskipITs
    artifacts:
        paths:
            - logger-server/target/*.jar

docker-deploy:
    needs:
        - package-deploy
    only:
        - main
    stage: deploy
    image: docker:27.3.1
    tags:
        - docker
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - cd logger-server
        - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --install all
        - docker buildx create --platform=linux/amd64,linux/arm64 --driver=docker-container --name=mybuilder --use --bootstrap
        - docker buildx build --platform=linux/amd64,linux/arm64 --pull --push --builder=mybuilder -t $CONTAINER_IMAGE .

pages:
    stage: deploy
    script:
        - mvn $MAVEN_CLI_OPTS site site:stage $MAVEN_OPTS
        - mv target/staging public
    artifacts:
        paths:
            - public
